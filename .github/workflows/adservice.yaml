name: adserviceci

on: 
  workflow_dispatch:

# on:
#   push:
#     branches:
#       - main  # Set the branch you want to trigger the workflow on
#     paths-ignore:
#       - 'helm/**'
#       - 'k8s/**'
#       - '.github/workflows/**'
#       - 'README.md'
#       - 'src/adservice/**'
#       - 'src/cartservice/**'
#       - 'src/checkoutservice/**'
#       - 'src/frontend/**'
#       - 'src/paymentservice/**'
#       - 'src/recommendationservice/**'
#       - 'src/currencyservice/**'
#       - 'src/productcatalogservice/**'
#       - 'src/emailservice/**'
#       - 'src/shippingservice/**'
#       - 'src/shoppingassistantservice/**'

jobs:
  # sonarqube-analysis:
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     # - name: Set up SonarQube Scanner
  #     #   uses: sonarsource/sonarcloud-github-action@v1
  #     #   with:
  #     #     token: ${{ secrets.SONAR_TOKEN }}
  #     - name: SonarQube Scan
  #       run: |
  #         sonar-scanner -X \
  #           -Dsonar.projectKey=AdService \
  #           -Dsonar.sources=./src/main/java \
  #           -Dsonar.java.binaries=./build/classes/java/main/hipstershop \
  #           -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
  #           -Dsonar.login=${{ secrets.SONAR_ADSERVICE_TOKEN }}
  # Owasp-dependency-check:
  #   runs-on: self-hosted
  #   needs: sonarqube-analysis

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Run OWASP Dependency-Check
  #       run: |
  #         dependency-check.sh \
  #           --project AdService \
  #           --out ./src/adservice/dependency-check-report \
  #           --scan ./src/adservice \
  #           --format "ALL"

  #     - name: Upload Dependency-Check Report
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: dependency-check-report
  #         path: ./src/adservice/dependency-check-report
  build-and-push:
    runs-on: self-hosted
    # needs: Owasp-dependency-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .  # Use the current directory as the build context
          file: ./src/adservice/Dockerfile  # Path to your Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/adservice-service:${{github.run_id}}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  # trivy-scan:
  #   runs-on: self-hosted
  #   needs: build-and-push
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Scan Docker image with Trivy
  #       run: |
  #         trivy image --no-progress --format table ${{ secrets.DOCKERHUB_USERNAME }}/adservice-service:${{ github.run_id }}  > ./trivy-scan-results.txt

  #     - name: Upload Trivy scan results
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: trivy-scan-results
  #         path: ./trivy-scan-results.txt
  update-newtag-in-helm-chart:
    runs-on: self-hosted
    # needs: trivy-scan
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}
    - name: Update tag in Helm chart
      run: |
        sed -i 's/adservicetag: .*/adservicetag: "${{github.run_id}}"/' helm/adservice-chart/values.yaml
    - name: Commit and push changes
      run: |
        git config --global user.email "nsnnln@gmail.com"
        git config --global user.name "abhi-nsn0304"
        git add helm/adservice-chart/values.yaml
        git commit -m "Update tag in Helm chart"
        git push
