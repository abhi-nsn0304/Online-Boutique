name: shippingserviceci
on: 
  workflow_dispatch:
# Exclude the workflow to run on changes to the helm chart
# on:
#   push:
#     branches:
#       - main
#     paths-ignore:
#       - 'helm/**'
#       - 'k8s/**'
#       - '.github/workflows/**'
#       - 'README.md'
#       - 'src/adservice/**'
#       - 'src/cartservice/**'
#       - 'src/checkoutservice/**'
#       - 'src/currencyservice/**'
#       - 'src/emailservice/**'
#       - 'src/loadgenerator/**'
#       - 'src/paymentservice/**'
#       - 'src/productcatalogservice/**'
#       - 'src/recommendationservice/**'
#       - 'src/frontend/**'
#       - 'src/shoppingassistantservice/**'
jobs:
  # sonarqube-analysis:
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     # - name: Set up SonarQube Scanner
  #     #   uses: sonarsource/sonarcloud-github-action@v1
  #     #   with:
  #     #     token: ${{ secrets.SONAR_TOKEN }}
  #     - name: SonarQube Scan
  #       run: |
  #         sonar-scanner \
  #           -Dsonar.projectKey=ShippingService \
  #           -Dsonar.sources=./src/shippingservice \
  #           -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
  #           -Dsonar.login=${{ secrets.SONAR_SHIPPINGSERVICE_TOKEN }}
  build:
    runs-on: ubuntu-latest
    # needs: sonarqube-analysis
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Go 1.22
      uses: actions/setup-go@v2
      with:
        go-version: 1.22
    - name: Build shipping-service
      working-directory: src/shippingservice
      run: go build -o shipping-service
    - name: Test
      working-directory: src/shippingservice
      run: go test ./...
  # code-quality:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4

  #   - name: Run golangci-lint
  #     uses: golangci/golangci-lint-action@v6
  #     with:
  #       version: v1.56.2
  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and Push action
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./src/shippingservice/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/shipping-service:${{github.run_id}}
  # trivy-scan:
  #   runs-on: self-hosted
  #   needs: push
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Scan Docker image with Trivy
  #       run: |
  #         trivy image --no-progress --format table ${{ secrets.DOCKERHUB_USERNAME }}/shipping-service:${{ github.run_id }}  > ./trivy-scan-results.txt
  #     - name: Upload Trivy scan results
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: trivy-scan-results
  #         path: ./trivy-scan-results.txt
  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest
    # needs: trivy-scan
    needs: push
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}
    - name: Update tag in Helm chart
      run: |
        sed -i 's/shippingservicetag: .*/shippingservicetag: "${{github.run_id}}"/' helm/shippingservice-chart/values.yaml
    - name: Commit and push changes
      run: |
        git config --global user.email "nsnnln@gmail.com"
        git config --global user.name "abhi-nsn0304"
        git add helm/shippingservice-chart/values.yaml
        git commit -m "Update tag in Helm chart"
        git push
